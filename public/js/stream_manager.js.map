{"version":3,"sources":["stream_manager.js"],"names":[],"mappings":"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","file":"stream_manager.js","sourcesContent":["define(['./models'],\nfunction(models)\n{\n\"use-strict\";\n\nvar socketPath = function() {\n    var secure = window.location.protocol === 'https:';\n    return (secure ? 'wss' : 'ws') + '://' + window.location.host + '/v0/ws';\n};\n\n/**\n*/\nvar StreamManager = function() {\n    var self = this;\n    self.streams = { };\n    self.collections = { };\n\n    var processMessage = function(msg) {\n        if (!msg || !msg.type)\n            return;\n\n        var type = msg.type;\n        var target = (msg.source ? self.collections[msg.source] : self.streams[msg.from]);\n        (target ? target.listeners : []).forEach(function(x) {\n            if (x[type])\n                x[type](msg);\n        });\n    };\n\n    self.ready = false;\n\n    var openWebsocket = function() {\n        var socket = new WebSocket(socketPath());\n\n        socket.onopen = function(e) {\n            self.ready = true;\n            var targetStreams = Object.keys(self.streams);\n            if (targetStreams.length) {\n                socket.send(JSON.stringify({\n                    \"type\": \"Subscribe\",\n                    \"to\": targetStreams\n                }));\n            }\n\n            var targetCollections = Object.keys(self.collections);\n            if (targetCollections.length) {\n                targetCollections.forEach(function(x) {\n                    socket.send(JSON.stringify({\n                        \"type\": \"SubscribeCollection\",\n                        \"to\": x\n                    }));\n                });\n            }\n        };\n\n        socket.onmessage = function(event) {\n            var data = JSON.parse(event.data);\n            if (data)\n                processMessage(data);\n        };\n\n        socket.onclose = function() {\n            console.log('reopen');\n            if (self.ready) {\n                self.ready = false;\n                self.socket = openWebsocket();\n            }\n        };\n    };\n\n    self.socket = openWebsocket();\n};\n\nStreamManager.prototype.subscribe = function(path, callback) {\n    this.subscribeAll([path], callback);\n};\n\nStreamManager.prototype.subscribeAll = function(paths, callback) {\n    var self = this;\n\n    var newSubscriptions = [];\n    paths.map(models.normalizeUri).forEach(function(path) {\n        var current = self.streams[path];\n        if (current) {\n            current.listeners.push(callback);\n        } else {\n            self.streams[path] = { listeners: [callback] };\n            newSubscriptions.push(path);\n        }\n    });\n\n    if (newSubscriptions.length) {\n        if (self.ready) {\n            self.socket.send(JSON.stringify({\n                \"type\": \"Subscribe\",\n                \"to\": newSubscriptions\n            }));\n        }\n    }\n};\n\nStreamManager.prototype.subscribeCollection = function(path, callback) {\n    var self = this;\n    path = models.normalizeUri(path);\n\n    var current = self.collections[path];\n    if (current) {\n        current.listeners.push(callback);\n    } else {\n        self.collections[path] = { listeners: [callback] };\n        if (self.ready) {\n            self.socket.send(JSON.stringify({\n                \"type\": \"SubscribeCollection\",\n                \"to\": path\n            }));\n        }\n    }\n};\n\n\nreturn {\n    StreamManager: StreamManager\n};\n\n});"],"sourceRoot":"/source/"}