# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Meta
GET     /ThePolicy                     controllers.Application.policy()

# Streams
GET     /s                          controllers.Stream.index()
GET     /s/*path                    controllers.Stream.getStream(path)

# WebSocket
GET     /v0/ws                          controllers.Socket.open()

# OAuth
GET     /v0/oauth2/authorize              controllers.OAuth2Controller.authorize(response_type: String, client_id: String)
# NOCSRF
POST    /v0/oauth2/authorize              controllers.OAuth2Controller.onAuthorize()
# NOCSRF
POST    /v0/oauth2/access_token           controllers.OAuth2Controller.accessToken()

GET     /v0/oauth2/redeem                 controllers.OAuth2Controller.redeem
POST    /v0/oauth2/redeem                 controllers.OAuth2Controller.onRedeem
GET     /v0/oauth2/redeemSuccessful       controllers.OAuth2Controller.redeemSuccessful
PUT     /v0/oauth2/disposable             controllers.OAuth2Controller.createDisposableClient()

GET     /v0/oauth2/token_info              controllers.OAuth2Controller.tokenInfo(token: String)
POST     /v0/oauth2/revoke                 controllers.OAuth2Controller.revoke(token: String)

# Stream Api
GET     /v0/api/stream                       controllers.StreamApiController.apiGetStreams()
PUT     /v0/api/stream                       controllers.StreamApiController.apiCreateStream()
GET     /v0/api/stream/:id                   controllers.StreamApiController.apiGetStream(id)
DELETE  /v0/api/stream/:id                   controllers.StreamApiController.apiDeleteStream(id)
GET     /v0/api/stream/:id/status            controllers.StreamApiController.apiGetStreamStatus(id)
POST    /v0/api/stream/:id/status            controllers.StreamApiController.apiSetStreamStatus(id)
GET     /v0/api/stream/:id/tags              controllers.StreamApiController.getTags(id)
POST    /v0/api/stream/:id/tags              controllers.StreamApiController.setTags(id)
GET     /v0/api/stream/:id/tags/:tag         controllers.StreamApiController.getTag(id, tag)
PUT     /v0/api/stream/:id/tags/:tag         controllers.StreamApiController.setTag(id, tag)
PUT     /v0/api/stream/:id/tags/:tag         controllers.StreamApiController.removeTag(id, tag)
GET     /v0/api/stream/:id/children          controllers.StreamApiController.apiGetChildren(id)
GET     /v0/api/stream/:id/children/:child   controllers.StreamApiController.apiGetChild(id, child)
PUT     /v0/api/stream/:id/children/:child   controllers.StreamApiController.apiCreateChild(id, child)
DELETE  /v0/api/stream/:id/children/:child   controllers.StreamApiController.apiDeleteChild(id, child)

# User Api
GET     /v0/api/user/:id                   controllers.User.apiGetUser(id)

# Login and Logout
GET     /login                      controllers.Application.login()
GET     /onlogin                    controllers.Application.onLogin()

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout()
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

# Account
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /account/exists            controllers.Signup.exists()

GET     /accounts/add               controllers.Account.link()

GET     /account/link              controllers.Account.askLink()
POST    /account/link              controllers.Account.doLink()

GET     /account/merge             controllers.Account.askMerge()
POST    /account/merge             controllers.Account.doMerge()

GET     /account/selectUserName            controllers.Account.selectUserName()
POST    /account/selectUserName            controllers.Account.setSelectedUserName()

GET    /account                   controllers.Account.account()
GET    /account/authorizations    controllers.Account.authorizations()
DELETE    /account/authorizations/:clientId    controllers.Account.revokeAuthorization(clientId)

# Developer
GET     /account/developer            controllers.DeveloperController.index()

GET     /account/developer/createClient         controllers.DeveloperController.createClient()
POST    /account/developer/createClient         controllers.DeveloperController.createClientSubmit()

GET    /account/developer/client/:id                    controllers.DeveloperController.getClient(id)
DELETE /account/developer/client/:id                    controllers.DeveloperController.deleteClient(id)
POST   /account/developer/client/:id/regenerateSecret   controllers.DeveloperController.regenerateSecret(id)

POST   /account/developer/client/:id/redirects         controllers.DeveloperController.setRedirects(id)


# Shared pages
GET     /404                           controllers.Application.notFound()
GET     /401                           controllers.Application.unauthorized()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
GET     /webjars/*file              controllers.WebJarAssets.at(file)



GET  /*path/  controllers.Application.untrail(path: String)